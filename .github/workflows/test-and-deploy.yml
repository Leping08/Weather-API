name: Deploy to production

on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ci_tests:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.3
        env:
          MYSQL_DATABASE: test
          MYSQL_USER: user
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: secretroot
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Verify MySQL connection
        run: |
          mysql --version
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uuser -psecret -e "SHOW DATABASES"

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Generate key
        run: |
          php artisan key:generate
          php artisan --version

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run migrations
        env:
          MYSQL_DATABASE: test
          DB_DATABASE: test
          DB_USERNAME: user
          DB_PASSWORD: secret
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: |
          php artisan migrate

      - name: Run tests
        env:
          MYSQL_DATABASE: test
          DB_DATABASE: test
          DB_USERNAME: user
          DB_PASSWORD: secret
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: |
          php artisan test

  vapor:
    needs: [ci_tests]
    name: Deploy to production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Require Vapor CLI
        run: |
          composer global require laravel/vapor-cli

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Deploy Environment
        run: vapor deploy production
        env:
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
